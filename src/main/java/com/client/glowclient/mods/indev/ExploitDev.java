//Deobfuscated with https://github.com/PetoPetko/Minecraft-Deobfuscator3000 using mappings "1.12 stable mappings"!

/*
 * Decompiled with CFR 0.150.
 * 
 * Could not load the following classes:
 *  net.minecraft.network.Packet
 *  net.minecraft.network.play.server.SPacketEntityTeleport
 *  net.minecraft.network.play.server.SPacketMoveVehicle
 *  net.minecraft.network.play.server.SPacketParticles
 *  net.minecraft.network.play.server.SPacketSpawnGlobalEntity
 *  net.minecraftforge.fml.common.eventhandler.SubscribeEvent
 *  org.lwjgl.input.Keyboard
 */
package com.client.glowclient.mods.indev;

import com.client.glowclient.sponge.events.ModEvents.PlayerUpdateEvent;
import com.client.glowclient.sponge.events.PacketEvent;
import com.client.glowclient.utils.base.mod.Category;
import com.client.glowclient.utils.base.mod.branches.ToggleMod;
import com.client.glowclient.utils.client.Globals;
import com.client.glowclient.utils.mc.console.Console;
import net.minecraft.network.Packet;
import net.minecraft.network.play.server.SPacketEntityTeleport;
import net.minecraft.network.play.server.SPacketMoveVehicle;
import net.minecraft.network.play.server.SPacketParticles;
import net.minecraft.network.play.server.SPacketSpawnGlobalEntity;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import org.lwjgl.input.Keyboard;

public class ExploitDev
extends ToggleMod {
    public ExploitDev() {
        super(Category.JEWISHTRICKS, "ExploitDev", false, -1, "Template Description");
    }

    @SubscribeEvent
    public void ThunderHack(PacketEvent event) {
        Packet<?> packet = event.getPacket();
        if (packet instanceof SPacketSpawnGlobalEntity) {
            SPacketSpawnGlobalEntity lightning = (SPacketSpawnGlobalEntity)packet;
            Console.write("Lightning Struck at X: " + lightning.getX() / 32.0 + " Z: " + lightning.getZ() / 32.0);
        }
    }

    @SubscribeEvent
    public void TpRecorder(PacketEvent event) {
        Packet<?> packet = event.getPacket();
        if (packet instanceof SPacketEntityTeleport) {
            SPacketEntityTeleport entity = (SPacketEntityTeleport)packet;
            if (Globals.MC.world.getEntityByID(((SPacketEntityTeleport)packet).getEntityId()) != null) {
                Console.write("Entity: " + Globals.MC.world.getEntityByID(((SPacketEntityTeleport)packet).getEntityId()).getName() + " Teleported to X: " + String.format("%.2f", entity.getX()) + " Z: " + String.format("%.2f", entity.getZ()));
            }
        }
    }

    @SubscribeEvent
    public void ParticleRecorder(PacketEvent event) {
        Packet<?> packet = event.getPacket();
        if (packet instanceof SPacketParticles) {
            SPacketParticles entity = (SPacketParticles)packet;
            Console.write("Particle spawned at: " + String.format("%.2f", entity.getXCoordinate()) + " Z: " + String.format("%.2f", entity.getZCoordinate()));
        }
    }

    @SubscribeEvent
    public void VehicleMoveRecorder(PacketEvent event) {
        Packet<?> packet = event.getPacket();
        if (packet instanceof SPacketMoveVehicle) {
            SPacketMoveVehicle entity = (SPacketMoveVehicle)packet;
            Console.write("Vehicle moved at: " + String.format("%.2f", entity.getX()) + " Z: " + String.format("%.2f", entity.getZ()));
        }
    }

    @SubscribeEvent
    public void update(PlayerUpdateEvent event) {
        if (Keyboard.isKeyDown((int)208)) {
            Console.write(Integer.toString(Globals.MC.player.getHeldItemMainhand().itemDamage));
        }
    }
}

